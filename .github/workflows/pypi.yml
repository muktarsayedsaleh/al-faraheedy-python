name: Publish Al-Faraheedy-Python to PyPI

on:
  # Trigger on new releases
  release:
    types: [published]
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        default: '1.0.0'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -e .
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=al_faraheedy --cov-report=xml
    
    - name: Test basic functionality
      run: |
        python -c "
        from al_faraheedy import ArabicPoetryAnalyzer
        analyzer = ArabicPoetryAnalyzer()
        result = analyzer.analyze_classical_verse('سلامٌ منْ صبا بردى أرقُّ')
        print(f'✅ Test passed - Meter: {result[\"ba7er_name\"]}')
        assert result['ba7er_name'] != 'unknown', 'Meter detection failed'
        "

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for setuptools-scm
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools wheel
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/